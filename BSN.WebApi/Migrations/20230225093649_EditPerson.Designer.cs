// <auto-generated />
using System;
using BSN.WebApi.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BSN.WebApi.Migrations
{
    [DbContext(typeof(TestDbContext))]
    [Migration("20230225093649_EditPerson")]
    partial class EditPerson
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BSN.WebApi.Domain.Entity.Message", b =>
                {
                    b.Property<Guid>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuthorPersonId")
                        .HasColumnType("uuid");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("TwitTweetId")
                        .HasColumnType("uuid");

                    b.HasKey("MessageId");

                    b.HasIndex("AuthorPersonId");

                    b.HasIndex("TwitTweetId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("BSN.WebApi.Domain.Entity.Person", b =>
                {
                    b.Property<Guid>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Bio")
                        .HasColumnType("text");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Hash")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("PersonId1")
                        .HasColumnType("uuid");

                    b.Property<string>("Place")
                        .HasColumnType("text");

                    b.Property<int>("Sex")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PersonId");

                    b.HasIndex("PersonId1");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("BSN.WebApi.Domain.Entity.Tweet", b =>
                {
                    b.Property<Guid>("TweetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuthorPersonId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("QuoteTweetId")
                        .HasColumnType("uuid");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("TweetId");

                    b.HasIndex("AuthorPersonId");

                    b.HasIndex("QuoteTweetId");

                    b.ToTable("Tweets");
                });

            modelBuilder.Entity("BSN.WebApi.Domain.Entity.Message", b =>
                {
                    b.HasOne("BSN.WebApi.Domain.Entity.Person", "Author")
                        .WithMany("Messages")
                        .HasForeignKey("AuthorPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BSN.WebApi.Domain.Entity.Tweet", "Twit")
                        .WithMany()
                        .HasForeignKey("TwitTweetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Twit");
                });

            modelBuilder.Entity("BSN.WebApi.Domain.Entity.Person", b =>
                {
                    b.HasOne("BSN.WebApi.Domain.Entity.Person", null)
                        .WithMany("Following")
                        .HasForeignKey("PersonId1");
                });

            modelBuilder.Entity("BSN.WebApi.Domain.Entity.Tweet", b =>
                {
                    b.HasOne("BSN.WebApi.Domain.Entity.Person", "Author")
                        .WithMany("Liked")
                        .HasForeignKey("AuthorPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BSN.WebApi.Domain.Entity.Tweet", "Quote")
                        .WithMany("Comments")
                        .HasForeignKey("QuoteTweetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Quote");
                });

            modelBuilder.Entity("BSN.WebApi.Domain.Entity.Person", b =>
                {
                    b.Navigation("Following");

                    b.Navigation("Liked");

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("BSN.WebApi.Domain.Entity.Tweet", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
